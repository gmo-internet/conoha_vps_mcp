name: ci
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  biome:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
      contents: read
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-biome-${{ github.ref }}
    steps:
      - name: Checkout files
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22.19.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run checks
        run: npm run biome:ci

  test:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
      contents: read
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-test-${{ github.ref }}
    steps:
      - name: Checkout files
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22.19.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test

      - name: Convert CSV to Markdown Table
        id: csv-to-markdown
        run: |
          node .github/scripts/csv-to-markdown.js

      - name: Parse coverage summary
        id: coverage
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
            echo "coverage=${COVERAGE}" >> $GITHUB_OUTPUT
            echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
            echo "| Lines | $(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')% |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | $(cat coverage/coverage-summary.json | jq -r '.total.functions.pct')% |" >> $GITHUB_STEP_SUMMARY
            echo "| Branches | $(cat coverage/coverage-summary.json | jq -r '.total.branches.pct')% |" >> $GITHUB_STEP_SUMMARY
            echo "| Statements | $(cat coverage/coverage-summary.json | jq -r '.total.statements.pct')% |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📊 [View detailed coverage report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment test results and coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const fs = require('fs');
            let comment = '';
            
            // Add test results report if available
            if (fs.existsSync('test-report.md')) {
              const testReport = fs.readFileSync('test-report.md', 'utf8');
              comment += testReport + '\n\n';
            }
            
            // Add coverage report if available
            if (fs.existsSync('reports/coverage/coverage-summary.json')) {
              const coverage = JSON.parse(fs.readFileSync('reports/coverage/coverage-summary.json', 'utf8'));
              comment += `## 📊 Test Coverage Report
              
              | Metric | Coverage |
              |--------|----------|
              | Lines | ${coverage.total.lines.pct}% |
              | Functions | ${coverage.total.functions.pct}% |
              | Branches | ${coverage.total.branches.pct}% |
              | Statements | ${coverage.total.statements.pct}% |
              
              <details>
              <summary>📁 File Coverage Details</summary>
              
              ${Object.entries(coverage).filter(([key]) => key !== 'total').map(([file, data]) => 
                `**${file}**: Lines ${data.lines.pct}% | Functions ${data.functions.pct}% | Branches ${data.branches.pct}% | Statements ${data.statements.pct}%`
              ).join('\n')}
              </details>`;
            }
            
            if (comment) {
              // Find existing test report or coverage comment
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });
              
              const existingComment = comments.data.find(comment => 
                comment.body.includes('📊 Test Results Report') || comment.body.includes('📊 Test Coverage Report')
              );
              
              if (existingComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: comment
                });
                console.log('Updated existing test and coverage report comment');
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: comment
                });
                console.log('Created new test and coverage report comment');
              }
            }

      - name: Upload test and coverage artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: test-and-coverage-report
          path: |
            reports/coverage/test-result.csv
            test-report.md
          retention-days: 30
